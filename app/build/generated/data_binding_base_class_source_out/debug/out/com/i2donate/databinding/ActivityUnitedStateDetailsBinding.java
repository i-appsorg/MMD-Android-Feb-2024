// Generated by view binder compiler. Do not edit!
package com.i2donate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.i2donate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUnitedStateDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView backIconLoginImg;

  @NonNull
  public final TextView browseInternationalTv;

  @NonNull
  public final Toolbar commonMenuActivityToolbar;

  @NonNull
  public final TextView descriptionTv;

  @NonNull
  public final LinearLayout donateLinearLayout;

  @NonNull
  public final TextView followCountTv;

  @NonNull
  public final ImageView followIconImg;

  @NonNull
  public final LinearLayout followLinearLayout;

  @NonNull
  public final ImageView interImg;

  @NonNull
  public final TextView likeCountTv;

  @NonNull
  public final ImageView likeIconImg;

  @NonNull
  public final LinearLayout likeLinearLayout;

  @NonNull
  public final TextView locationTv;

  @NonNull
  public final ImageView logoImg;

  @NonNull
  public final ImageView nameImg;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final ImageView typeImg;

  @NonNull
  public final RelativeLayout typeRelativeLayout;

  @NonNull
  public final TextView unfollowCountTv;

  @NonNull
  public final ImageView unfollowIconImg;

  @NonNull
  public final LinearLayout unfollowLinearLayout;

  @NonNull
  public final TextView unlikeCountTv;

  @NonNull
  public final ImageView unlikeIconImg;

  @NonNull
  public final LinearLayout unlikeLinearLayout;

  @NonNull
  public final ImageView usaImg;

  private ActivityUnitedStateDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView backIconLoginImg, @NonNull TextView browseInternationalTv,
      @NonNull Toolbar commonMenuActivityToolbar, @NonNull TextView descriptionTv,
      @NonNull LinearLayout donateLinearLayout, @NonNull TextView followCountTv,
      @NonNull ImageView followIconImg, @NonNull LinearLayout followLinearLayout,
      @NonNull ImageView interImg, @NonNull TextView likeCountTv, @NonNull ImageView likeIconImg,
      @NonNull LinearLayout likeLinearLayout, @NonNull TextView locationTv,
      @NonNull ImageView logoImg, @NonNull ImageView nameImg, @NonNull TextView nameTv,
      @NonNull ImageView typeImg, @NonNull RelativeLayout typeRelativeLayout,
      @NonNull TextView unfollowCountTv, @NonNull ImageView unfollowIconImg,
      @NonNull LinearLayout unfollowLinearLayout, @NonNull TextView unlikeCountTv,
      @NonNull ImageView unlikeIconImg, @NonNull LinearLayout unlikeLinearLayout,
      @NonNull ImageView usaImg) {
    this.rootView = rootView;
    this.backIconLoginImg = backIconLoginImg;
    this.browseInternationalTv = browseInternationalTv;
    this.commonMenuActivityToolbar = commonMenuActivityToolbar;
    this.descriptionTv = descriptionTv;
    this.donateLinearLayout = donateLinearLayout;
    this.followCountTv = followCountTv;
    this.followIconImg = followIconImg;
    this.followLinearLayout = followLinearLayout;
    this.interImg = interImg;
    this.likeCountTv = likeCountTv;
    this.likeIconImg = likeIconImg;
    this.likeLinearLayout = likeLinearLayout;
    this.locationTv = locationTv;
    this.logoImg = logoImg;
    this.nameImg = nameImg;
    this.nameTv = nameTv;
    this.typeImg = typeImg;
    this.typeRelativeLayout = typeRelativeLayout;
    this.unfollowCountTv = unfollowCountTv;
    this.unfollowIconImg = unfollowIconImg;
    this.unfollowLinearLayout = unfollowLinearLayout;
    this.unlikeCountTv = unlikeCountTv;
    this.unlikeIconImg = unlikeIconImg;
    this.unlikeLinearLayout = unlikeLinearLayout;
    this.usaImg = usaImg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUnitedStateDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUnitedStateDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_united_state_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUnitedStateDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_icon_login_img;
      ImageView backIconLoginImg = ViewBindings.findChildViewById(rootView, id);
      if (backIconLoginImg == null) {
        break missingId;
      }

      id = R.id.browse_international_tv;
      TextView browseInternationalTv = ViewBindings.findChildViewById(rootView, id);
      if (browseInternationalTv == null) {
        break missingId;
      }

      id = R.id.commonMenuActivityToolbar;
      Toolbar commonMenuActivityToolbar = ViewBindings.findChildViewById(rootView, id);
      if (commonMenuActivityToolbar == null) {
        break missingId;
      }

      id = R.id.description_tv;
      TextView descriptionTv = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTv == null) {
        break missingId;
      }

      id = R.id.donate_linear_layout;
      LinearLayout donateLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (donateLinearLayout == null) {
        break missingId;
      }

      id = R.id.follow_count_tv;
      TextView followCountTv = ViewBindings.findChildViewById(rootView, id);
      if (followCountTv == null) {
        break missingId;
      }

      id = R.id.follow_icon_img;
      ImageView followIconImg = ViewBindings.findChildViewById(rootView, id);
      if (followIconImg == null) {
        break missingId;
      }

      id = R.id.follow_linear_layout;
      LinearLayout followLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (followLinearLayout == null) {
        break missingId;
      }

      id = R.id.inter_img;
      ImageView interImg = ViewBindings.findChildViewById(rootView, id);
      if (interImg == null) {
        break missingId;
      }

      id = R.id.like_count_tv;
      TextView likeCountTv = ViewBindings.findChildViewById(rootView, id);
      if (likeCountTv == null) {
        break missingId;
      }

      id = R.id.like_icon_img;
      ImageView likeIconImg = ViewBindings.findChildViewById(rootView, id);
      if (likeIconImg == null) {
        break missingId;
      }

      id = R.id.like_linear_layout;
      LinearLayout likeLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (likeLinearLayout == null) {
        break missingId;
      }

      id = R.id.location_tv;
      TextView locationTv = ViewBindings.findChildViewById(rootView, id);
      if (locationTv == null) {
        break missingId;
      }

      id = R.id.logo_img;
      ImageView logoImg = ViewBindings.findChildViewById(rootView, id);
      if (logoImg == null) {
        break missingId;
      }

      id = R.id.name_img;
      ImageView nameImg = ViewBindings.findChildViewById(rootView, id);
      if (nameImg == null) {
        break missingId;
      }

      id = R.id.name_tv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.type_img;
      ImageView typeImg = ViewBindings.findChildViewById(rootView, id);
      if (typeImg == null) {
        break missingId;
      }

      id = R.id.type_relative_layout;
      RelativeLayout typeRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (typeRelativeLayout == null) {
        break missingId;
      }

      id = R.id.unfollow_count_tv;
      TextView unfollowCountTv = ViewBindings.findChildViewById(rootView, id);
      if (unfollowCountTv == null) {
        break missingId;
      }

      id = R.id.unfollow_icon_img;
      ImageView unfollowIconImg = ViewBindings.findChildViewById(rootView, id);
      if (unfollowIconImg == null) {
        break missingId;
      }

      id = R.id.unfollow_linear_layout;
      LinearLayout unfollowLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (unfollowLinearLayout == null) {
        break missingId;
      }

      id = R.id.unlike_count_tv;
      TextView unlikeCountTv = ViewBindings.findChildViewById(rootView, id);
      if (unlikeCountTv == null) {
        break missingId;
      }

      id = R.id.unlike_icon_img;
      ImageView unlikeIconImg = ViewBindings.findChildViewById(rootView, id);
      if (unlikeIconImg == null) {
        break missingId;
      }

      id = R.id.unlike_linear_layout;
      LinearLayout unlikeLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (unlikeLinearLayout == null) {
        break missingId;
      }

      id = R.id.usa_img;
      ImageView usaImg = ViewBindings.findChildViewById(rootView, id);
      if (usaImg == null) {
        break missingId;
      }

      return new ActivityUnitedStateDetailsBinding((RelativeLayout) rootView, backIconLoginImg,
          browseInternationalTv, commonMenuActivityToolbar, descriptionTv, donateLinearLayout,
          followCountTv, followIconImg, followLinearLayout, interImg, likeCountTv, likeIconImg,
          likeLinearLayout, locationTv, logoImg, nameImg, nameTv, typeImg, typeRelativeLayout,
          unfollowCountTv, unfollowIconImg, unfollowLinearLayout, unlikeCountTv, unlikeIconImg,
          unlikeLinearLayout, usaImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
