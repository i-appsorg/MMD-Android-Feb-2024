// Generated by view binder compiler. Do not edit!
package com.i2donate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.i2donate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNamePlaceSerachBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText autocompletePlaces;

  @NonNull
  public final ImageView backIconAutoplaceImg;

  @NonNull
  public final ImageView closeImg;

  @NonNull
  public final Toolbar commonMenuActivityToolbar;

  @NonNull
  public final NestedScrollView nestedscrollview;

  @NonNull
  public final LinearLayout noDataLinear;

  @NonNull
  public final TextView noDataTv;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final ShimmerFrameLayout shimmerViewContainer;

  private ActivityNamePlaceSerachBinding(@NonNull LinearLayout rootView,
      @NonNull EditText autocompletePlaces, @NonNull ImageView backIconAutoplaceImg,
      @NonNull ImageView closeImg, @NonNull Toolbar commonMenuActivityToolbar,
      @NonNull NestedScrollView nestedscrollview, @NonNull LinearLayout noDataLinear,
      @NonNull TextView noDataTv, @NonNull RecyclerView recyclerView, @NonNull ImageView searchIcon,
      @NonNull ShimmerFrameLayout shimmerViewContainer) {
    this.rootView = rootView;
    this.autocompletePlaces = autocompletePlaces;
    this.backIconAutoplaceImg = backIconAutoplaceImg;
    this.closeImg = closeImg;
    this.commonMenuActivityToolbar = commonMenuActivityToolbar;
    this.nestedscrollview = nestedscrollview;
    this.noDataLinear = noDataLinear;
    this.noDataTv = noDataTv;
    this.recyclerView = recyclerView;
    this.searchIcon = searchIcon;
    this.shimmerViewContainer = shimmerViewContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNamePlaceSerachBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNamePlaceSerachBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_name_place_serach, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNamePlaceSerachBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autocomplete_places;
      EditText autocompletePlaces = ViewBindings.findChildViewById(rootView, id);
      if (autocompletePlaces == null) {
        break missingId;
      }

      id = R.id.back_icon_autoplace_img;
      ImageView backIconAutoplaceImg = ViewBindings.findChildViewById(rootView, id);
      if (backIconAutoplaceImg == null) {
        break missingId;
      }

      id = R.id.close_img;
      ImageView closeImg = ViewBindings.findChildViewById(rootView, id);
      if (closeImg == null) {
        break missingId;
      }

      id = R.id.commonMenuActivityToolbar;
      Toolbar commonMenuActivityToolbar = ViewBindings.findChildViewById(rootView, id);
      if (commonMenuActivityToolbar == null) {
        break missingId;
      }

      id = R.id.nestedscrollview;
      NestedScrollView nestedscrollview = ViewBindings.findChildViewById(rootView, id);
      if (nestedscrollview == null) {
        break missingId;
      }

      id = R.id.no_data_linear;
      LinearLayout noDataLinear = ViewBindings.findChildViewById(rootView, id);
      if (noDataLinear == null) {
        break missingId;
      }

      id = R.id.no_data_tv;
      TextView noDataTv = ViewBindings.findChildViewById(rootView, id);
      if (noDataTv == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.search_icon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.shimmer_view_container;
      ShimmerFrameLayout shimmerViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (shimmerViewContainer == null) {
        break missingId;
      }

      return new ActivityNamePlaceSerachBinding((LinearLayout) rootView, autocompletePlaces,
          backIconAutoplaceImg, closeImg, commonMenuActivityToolbar, nestedscrollview, noDataLinear,
          noDataTv, recyclerView, searchIcon, shimmerViewContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
