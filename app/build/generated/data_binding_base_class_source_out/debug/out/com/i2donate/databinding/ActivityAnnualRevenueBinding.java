// Generated by view binder compiler. Do not edit!
package com.i2donate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.i2donate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnnualRevenueBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button annualApplyButton;

  @NonNull
  public final LinearLayout annualBottomLayout;

  @NonNull
  public final Button annualResetButton;

  @NonNull
  public final ImageView backIconRevenueImg;

  @NonNull
  public final Toolbar commonMenuActivityToolbar;

  @NonNull
  public final TextView fivehundDeselectTv;

  @NonNull
  public final TextView greaternintyDeselectTv;

  @NonNull
  public final TextView greaterthousandDeselectTv;

  @NonNull
  public final TextView nintyTv;

  @NonNull
  public final TextView titleTv;

  @NonNull
  public final TextView twohundTvDeselect;

  private ActivityAnnualRevenueBinding(@NonNull RelativeLayout rootView,
      @NonNull Button annualApplyButton, @NonNull LinearLayout annualBottomLayout,
      @NonNull Button annualResetButton, @NonNull ImageView backIconRevenueImg,
      @NonNull Toolbar commonMenuActivityToolbar, @NonNull TextView fivehundDeselectTv,
      @NonNull TextView greaternintyDeselectTv, @NonNull TextView greaterthousandDeselectTv,
      @NonNull TextView nintyTv, @NonNull TextView titleTv, @NonNull TextView twohundTvDeselect) {
    this.rootView = rootView;
    this.annualApplyButton = annualApplyButton;
    this.annualBottomLayout = annualBottomLayout;
    this.annualResetButton = annualResetButton;
    this.backIconRevenueImg = backIconRevenueImg;
    this.commonMenuActivityToolbar = commonMenuActivityToolbar;
    this.fivehundDeselectTv = fivehundDeselectTv;
    this.greaternintyDeselectTv = greaternintyDeselectTv;
    this.greaterthousandDeselectTv = greaterthousandDeselectTv;
    this.nintyTv = nintyTv;
    this.titleTv = titleTv;
    this.twohundTvDeselect = twohundTvDeselect;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnnualRevenueBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnnualRevenueBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_annual_revenue, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnnualRevenueBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.annual_apply_button;
      Button annualApplyButton = ViewBindings.findChildViewById(rootView, id);
      if (annualApplyButton == null) {
        break missingId;
      }

      id = R.id.annual_bottom_layout;
      LinearLayout annualBottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (annualBottomLayout == null) {
        break missingId;
      }

      id = R.id.annual_reset_button;
      Button annualResetButton = ViewBindings.findChildViewById(rootView, id);
      if (annualResetButton == null) {
        break missingId;
      }

      id = R.id.back_icon_revenue_img;
      ImageView backIconRevenueImg = ViewBindings.findChildViewById(rootView, id);
      if (backIconRevenueImg == null) {
        break missingId;
      }

      id = R.id.commonMenuActivityToolbar;
      Toolbar commonMenuActivityToolbar = ViewBindings.findChildViewById(rootView, id);
      if (commonMenuActivityToolbar == null) {
        break missingId;
      }

      id = R.id.fivehund_deselect_tv;
      TextView fivehundDeselectTv = ViewBindings.findChildViewById(rootView, id);
      if (fivehundDeselectTv == null) {
        break missingId;
      }

      id = R.id.greaterninty_deselect_tv;
      TextView greaternintyDeselectTv = ViewBindings.findChildViewById(rootView, id);
      if (greaternintyDeselectTv == null) {
        break missingId;
      }

      id = R.id.greaterthousand_deselect_tv;
      TextView greaterthousandDeselectTv = ViewBindings.findChildViewById(rootView, id);
      if (greaterthousandDeselectTv == null) {
        break missingId;
      }

      id = R.id.ninty_tv;
      TextView nintyTv = ViewBindings.findChildViewById(rootView, id);
      if (nintyTv == null) {
        break missingId;
      }

      id = R.id.title_tv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      id = R.id.twohund_tv_deselect;
      TextView twohundTvDeselect = ViewBindings.findChildViewById(rootView, id);
      if (twohundTvDeselect == null) {
        break missingId;
      }

      return new ActivityAnnualRevenueBinding((RelativeLayout) rootView, annualApplyButton,
          annualBottomLayout, annualResetButton, backIconRevenueImg, commonMenuActivityToolbar,
          fivehundDeselectTv, greaternintyDeselectTv, greaterthousandDeselectTv, nintyTv, titleTv,
          twohundTvDeselect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
