// Generated by view binder compiler. Do not edit!
package com.i2donate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.i2donate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOtpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView backIconOtpImg;

  @NonNull
  public final TextView changeMailBtnTv;

  @NonNull
  public final Toolbar commonMenuActivityToolbar;

  @NonNull
  public final EditText confirmPassword;

  @NonNull
  public final TextInputLayout confirmPasswordLayoutInput;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final TextInputLayout newPasswordLayoutInput;

  @NonNull
  public final LinearLayout otpLinear;

  @NonNull
  public final TextView otpReceivedTv;

  @NonNull
  public final EditText pinFirstEdittext;

  @NonNull
  public final EditText pinForthEdittext;

  @NonNull
  public final EditText pinHiddenEdittext;

  @NonNull
  public final EditText pinSecondEdittext;

  @NonNull
  public final EditText pinThirdEdittext;

  @NonNull
  public final TextView resendBtnTv;

  @NonNull
  public final TextView titleToolTv;

  @NonNull
  public final Button updateSubmitBtn;

  @NonNull
  public final LinearLayout updatepasswordLinear;

  private ActivityOtpBinding(@NonNull RelativeLayout rootView, @NonNull ImageView backIconOtpImg,
      @NonNull TextView changeMailBtnTv, @NonNull Toolbar commonMenuActivityToolbar,
      @NonNull EditText confirmPassword, @NonNull TextInputLayout confirmPasswordLayoutInput,
      @NonNull EditText newPassword, @NonNull TextInputLayout newPasswordLayoutInput,
      @NonNull LinearLayout otpLinear, @NonNull TextView otpReceivedTv,
      @NonNull EditText pinFirstEdittext, @NonNull EditText pinForthEdittext,
      @NonNull EditText pinHiddenEdittext, @NonNull EditText pinSecondEdittext,
      @NonNull EditText pinThirdEdittext, @NonNull TextView resendBtnTv,
      @NonNull TextView titleToolTv, @NonNull Button updateSubmitBtn,
      @NonNull LinearLayout updatepasswordLinear) {
    this.rootView = rootView;
    this.backIconOtpImg = backIconOtpImg;
    this.changeMailBtnTv = changeMailBtnTv;
    this.commonMenuActivityToolbar = commonMenuActivityToolbar;
    this.confirmPassword = confirmPassword;
    this.confirmPasswordLayoutInput = confirmPasswordLayoutInput;
    this.newPassword = newPassword;
    this.newPasswordLayoutInput = newPasswordLayoutInput;
    this.otpLinear = otpLinear;
    this.otpReceivedTv = otpReceivedTv;
    this.pinFirstEdittext = pinFirstEdittext;
    this.pinForthEdittext = pinForthEdittext;
    this.pinHiddenEdittext = pinHiddenEdittext;
    this.pinSecondEdittext = pinSecondEdittext;
    this.pinThirdEdittext = pinThirdEdittext;
    this.resendBtnTv = resendBtnTv;
    this.titleToolTv = titleToolTv;
    this.updateSubmitBtn = updateSubmitBtn;
    this.updatepasswordLinear = updatepasswordLinear;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_icon_otp_img;
      ImageView backIconOtpImg = ViewBindings.findChildViewById(rootView, id);
      if (backIconOtpImg == null) {
        break missingId;
      }

      id = R.id.change_mail_btn_tv;
      TextView changeMailBtnTv = ViewBindings.findChildViewById(rootView, id);
      if (changeMailBtnTv == null) {
        break missingId;
      }

      id = R.id.commonMenuActivityToolbar;
      Toolbar commonMenuActivityToolbar = ViewBindings.findChildViewById(rootView, id);
      if (commonMenuActivityToolbar == null) {
        break missingId;
      }

      id = R.id.confirm_password;
      EditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.confirm_password_layout_input;
      TextInputLayout confirmPasswordLayoutInput = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLayoutInput == null) {
        break missingId;
      }

      id = R.id.new_password;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.new_password_layout_input;
      TextInputLayout newPasswordLayoutInput = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordLayoutInput == null) {
        break missingId;
      }

      id = R.id.otp_linear;
      LinearLayout otpLinear = ViewBindings.findChildViewById(rootView, id);
      if (otpLinear == null) {
        break missingId;
      }

      id = R.id.otp_received_tv;
      TextView otpReceivedTv = ViewBindings.findChildViewById(rootView, id);
      if (otpReceivedTv == null) {
        break missingId;
      }

      id = R.id.pin_first_edittext;
      EditText pinFirstEdittext = ViewBindings.findChildViewById(rootView, id);
      if (pinFirstEdittext == null) {
        break missingId;
      }

      id = R.id.pin_forth_edittext;
      EditText pinForthEdittext = ViewBindings.findChildViewById(rootView, id);
      if (pinForthEdittext == null) {
        break missingId;
      }

      id = R.id.pin_hidden_edittext;
      EditText pinHiddenEdittext = ViewBindings.findChildViewById(rootView, id);
      if (pinHiddenEdittext == null) {
        break missingId;
      }

      id = R.id.pin_second_edittext;
      EditText pinSecondEdittext = ViewBindings.findChildViewById(rootView, id);
      if (pinSecondEdittext == null) {
        break missingId;
      }

      id = R.id.pin_third_edittext;
      EditText pinThirdEdittext = ViewBindings.findChildViewById(rootView, id);
      if (pinThirdEdittext == null) {
        break missingId;
      }

      id = R.id.resend_btn_tv;
      TextView resendBtnTv = ViewBindings.findChildViewById(rootView, id);
      if (resendBtnTv == null) {
        break missingId;
      }

      id = R.id.title_tool_tv;
      TextView titleToolTv = ViewBindings.findChildViewById(rootView, id);
      if (titleToolTv == null) {
        break missingId;
      }

      id = R.id.update_submit_btn;
      Button updateSubmitBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateSubmitBtn == null) {
        break missingId;
      }

      id = R.id.updatepassword_linear;
      LinearLayout updatepasswordLinear = ViewBindings.findChildViewById(rootView, id);
      if (updatepasswordLinear == null) {
        break missingId;
      }

      return new ActivityOtpBinding((RelativeLayout) rootView, backIconOtpImg, changeMailBtnTv,
          commonMenuActivityToolbar, confirmPassword, confirmPasswordLayoutInput, newPassword,
          newPasswordLayoutInput, otpLinear, otpReceivedTv, pinFirstEdittext, pinForthEdittext,
          pinHiddenEdittext, pinSecondEdittext, pinThirdEdittext, resendBtnTv, titleToolTv,
          updateSubmitBtn, updatepasswordLinear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
